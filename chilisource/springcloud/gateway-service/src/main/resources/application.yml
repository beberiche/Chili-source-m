server:
  port: 8000

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://{주소}:8761/eureka

spring:
  # bean중복 에러 해결
  main:
    allow-bean-definition-overriding: true
  application:
    name: gateway-service
  zipkin:
    # TODO : 서버에 Open Zipkin Jar 파일 다운로드 후 실행하면 연결됨
    base-url: http://{주소}:9411
    enabled: true
  sleuth:
    sampler:
      probability: 1.0
  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: ["https://{주소}","http://localhost:3000"]
            allow-credentials: true
            allowedHeaders: '*'
            exposed-headers:
              - 'Authorization'
            max-age: 86400
            allowedMethods: '*'

      routes:
        - id: auth-service
          uri: lb://AUTH-SERVICE
          predicates:
            - Path=/auth-service/**
            - Method=GET,POST,PUT,DELETE,OPTIONS
          filters:
            #- RemoveRequestHeader=Cookie
            #- RewritePath=/user-service/(?<segment>.*),/$\{segment}
        #---------------------------------------------USER FILTER START---------------------------------------------------------------
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
            - Method=GET,POST,PUT,DELETE,OPTIONS
          filters:
            #- RemoveRequestHeader=Cookie
            #- RewritePath=/user-service/(?<segment>.*),/$\{segment}
        #---------------------------------------------USER FILTER END---------------------------------------------------------------

        ##---------------------------------------------PROJECT FILTER START---------------------------------------------------------------
        #        - id: user-service
        #          uri: lb://USER-SERVICE
        #          predicates:
        #            - Path=/api/user-service/recreatejwt
        #            - Method=GET
        #          filters:
        #            - AuthorizationFilter
        #
        #        - id: user-service
        #          uri: lb://USER-SERVICE
        #          predicates:
        #            - Path=/api/user-service/game
        #            - Method=GET,POST
        #          filters:
        #            - AuthorizationFilter
        #
        #        - id: user-service
        #          uri: lb://USER-SERVICE
        #          predicates:
        #            - Path=/api/user-service/disable
        #            - Method=GET
        #          filters:
        #            - AuthorizationFilter
        #
        #        - id: user-service
        #          uri: lb://USER-SERVICE
        #          predicates:
        #            - Path=/api/user-service/logout
        #            - Method=GET
        #          filters:
        #            - AuthorizationFilter

        - id: project-service
          uri: lb://PROJECT-SERVICE
          predicates:
            - Path=/project-service/**
            - Method=GET,POST,PUT,DELETE,OPTIONS
          filters:
            # - RemoveRequestHeader=Cookie
            #- RewritePath=/user-service/(?<segment>.*),/$\{segment}
        #---------------------------------------------PROJECT FILTER END---------------------------------------------------------------

        #---------------------------------------------ISSUE FILTER START---------------------------------------------------------------
        #        - id: festival-service
        #          uri: lb://FESTIVAL-SERVICE
        #          predicates:
        #            - Path=/api/festival-service/festival
        #            - Method=POST,PUT
        #          filters:
        #            - AdminFilter
        #
        #        - id: festival-service
        #          uri: lb://FESTIVAL-SERVICE
        #          predicates:
        #            - Path=/api/festival-service/festival/**
        #            - Method=DELETE
        #          filters:
        #            - AdminFilter
        #
        #        - id: festival-service
        #          uri: lb://FESTIVAL-SERVICE
        #          predicates:
        #            - Path=/api/festival-service/festival-form
        #            - Method=GET
        #          filters:
        #            - AdminFilter
        #
        #        - id: festival-service
        #          uri: lb://FESTIVAL-SERVICE
        #          predicates:
        #            - Path=/api/festival-service/festival-form/**
        #            - Method=GET
        #          filters:
        #            - AdminFilter
        #
        #        - id: festival-service
        #          uri: lb://FESTIVAL-SERVICE
        #          predicates:
        #            - Path=/api/festival-service/festival-form
        #            - Method=POST,PUT
        #          filters:
        #            - AuthorizationFilter
        #
        #        - id: festival-service
        #          uri: lb://FESTIVAL-SERVICE
        #          predicates:
        #            - Path=/api/festival-service/festival-form/**
        #            - Method=DELETE
        #          filters:
        #            - AuthorizationFilter

        - id: issue-service
          uri: lb://ISSUE-SERVICE
          predicates:
            - Path=/issue-service/**
            - Method=GET,POST,PUT,DELETE,OPTIONS
        #---------------------------------------------ISSUE FILTER END---------------------------------------------------------------

        #---------------------------------------------PROJECT FILTER START---------------------------------------------------------------
        #        - id: main-service
        #          uri: lb://MAIN-SERVICE
        #          predicates:
        #            - Path=/api/main-service/category
        #            - Method=POST
        #          filters:
        #            - AdminFilter
        #
        #        - id: main-service
        #          uri: lb://MAIN-SERVICE
        #          predicates:
        #            - Path=/api/main-service/question
        #            - Method=POST
        #          filters:
        #            - AdminFilter

        - id: widget-service
          uri: lb://WIDGET-SERVICE
          predicates:
            - Path=/widget-service/**
            - Method=GET,POST,PUT,DELETE,OPTIONS
        #          filters:
        #            - AuthorizationFilter
        #---------------------------------------------PROJECT FILTER END---------------------------------------------------------------

token:
  secret: 
  refresh: 
  
management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, busrefresh, info, metrics, prometheus
